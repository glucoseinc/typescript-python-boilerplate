// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginPage renders correctly 1`] = `
<LoginPage
  classes={
    Object {
      "avatar": "LoginPage-avatar-3",
      "form": "LoginPage-form-4",
      "main": "LoginPage-main-1",
      "paper": "LoginPage-paper-2",
      "submit": "LoginPage-submit-5",
    }
  }
  dispatch={[MockFunction]}
  user={
    Object {
      "isLoggedIn": false,
    }
  }
>
  <main
    className="LoginPage-main-1"
  >
    <WithStyles(Paper)
      className="LoginPage-paper-2"
    >
      <Paper
        className="LoginPage-paper-2"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0-8",
            "elevation1": "MuiPaper-elevation1-9",
            "elevation10": "MuiPaper-elevation10-18",
            "elevation11": "MuiPaper-elevation11-19",
            "elevation12": "MuiPaper-elevation12-20",
            "elevation13": "MuiPaper-elevation13-21",
            "elevation14": "MuiPaper-elevation14-22",
            "elevation15": "MuiPaper-elevation15-23",
            "elevation16": "MuiPaper-elevation16-24",
            "elevation17": "MuiPaper-elevation17-25",
            "elevation18": "MuiPaper-elevation18-26",
            "elevation19": "MuiPaper-elevation19-27",
            "elevation2": "MuiPaper-elevation2-10",
            "elevation20": "MuiPaper-elevation20-28",
            "elevation21": "MuiPaper-elevation21-29",
            "elevation22": "MuiPaper-elevation22-30",
            "elevation23": "MuiPaper-elevation23-31",
            "elevation24": "MuiPaper-elevation24-32",
            "elevation3": "MuiPaper-elevation3-11",
            "elevation4": "MuiPaper-elevation4-12",
            "elevation5": "MuiPaper-elevation5-13",
            "elevation6": "MuiPaper-elevation6-14",
            "elevation7": "MuiPaper-elevation7-15",
            "elevation8": "MuiPaper-elevation8-16",
            "elevation9": "MuiPaper-elevation9-17",
            "root": "MuiPaper-root-6",
            "rounded": "MuiPaper-rounded-7",
          }
        }
        component="div"
        elevation={2}
        square={false}
      >
        <div
          className="MuiPaper-root-6 MuiPaper-elevation2-10 MuiPaper-rounded-7 LoginPage-paper-2"
        >
          <WithStyles(Avatar)
            className="LoginPage-avatar-3"
          >
            <Avatar
              className="LoginPage-avatar-3"
              classes={
                Object {
                  "colorDefault": "MuiAvatar-colorDefault-34",
                  "img": "MuiAvatar-img-35",
                  "root": "MuiAvatar-root-33",
                }
              }
              component="div"
            >
              <div
                className="MuiAvatar-root-33 MuiAvatar-colorDefault-34 LoginPage-avatar-3"
              >
                <pure(LockOutlinedIcon)>
                  <LockOutlinedIcon>
                    <WithStyles(SvgIcon)>
                      <SvgIcon
                        classes={
                          Object {
                            "colorAction": "MuiSvgIcon-colorAction-39",
                            "colorDisabled": "MuiSvgIcon-colorDisabled-41",
                            "colorError": "MuiSvgIcon-colorError-40",
                            "colorPrimary": "MuiSvgIcon-colorPrimary-37",
                            "colorSecondary": "MuiSvgIcon-colorSecondary-38",
                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-42",
                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-44",
                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-43",
                            "root": "MuiSvgIcon-root-36",
                          }
                        }
                        color="inherit"
                        component="svg"
                        fontSize="default"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root-36"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <g
                            fill="none"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                            />
                            <path
                              d="M0 0h24v24H0V0z"
                              opacity=".87"
                            />
                          </g>
                          <path
                            d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"
                          />
                        </svg>
                      </SvgIcon>
                    </WithStyles(SvgIcon)>
                  </LockOutlinedIcon>
                </pure(LockOutlinedIcon)>
              </div>
            </Avatar>
          </WithStyles(Avatar)>
          <WithStyles(Typography)
            component="h1"
            variant="h5"
          >
            <Typography
              align="inherit"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter-68",
                  "alignJustify": "MuiTypography-alignJustify-70",
                  "alignLeft": "MuiTypography-alignLeft-67",
                  "alignRight": "MuiTypography-alignRight-69",
                  "body1": "MuiTypography-body1-54",
                  "body2": "MuiTypography-body2-53",
                  "button": "MuiTypography-button-56",
                  "caption": "MuiTypography-caption-55",
                  "colorError": "MuiTypography-colorError-79",
                  "colorInherit": "MuiTypography-colorInherit-74",
                  "colorPrimary": "MuiTypography-colorPrimary-75",
                  "colorSecondary": "MuiTypography-colorSecondary-76",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary-77",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary-78",
                  "display1": "MuiTypography-display1-49",
                  "display2": "MuiTypography-display2-48",
                  "display3": "MuiTypography-display3-47",
                  "display4": "MuiTypography-display4-46",
                  "gutterBottom": "MuiTypography-gutterBottom-72",
                  "h1": "MuiTypography-h1-57",
                  "h2": "MuiTypography-h2-58",
                  "h3": "MuiTypography-h3-59",
                  "h4": "MuiTypography-h4-60",
                  "h5": "MuiTypography-h5-61",
                  "h6": "MuiTypography-h6-62",
                  "headline": "MuiTypography-headline-50",
                  "noWrap": "MuiTypography-noWrap-71",
                  "overline": "MuiTypography-overline-65",
                  "paragraph": "MuiTypography-paragraph-73",
                  "root": "MuiTypography-root-45",
                  "srOnly": "MuiTypography-srOnly-66",
                  "subheading": "MuiTypography-subheading-52",
                  "subtitle1": "MuiTypography-subtitle1-63",
                  "subtitle2": "MuiTypography-subtitle2-64",
                  "title": "MuiTypography-title-51",
                }
              }
              color="default"
              component="h1"
              gutterBottom={false}
              headlineMapping={
                Object {
                  "body1": "p",
                  "body2": "p",
                  "display1": "h1",
                  "display2": "h1",
                  "display3": "h1",
                  "display4": "h1",
                  "h1": "h1",
                  "h2": "h2",
                  "h3": "h3",
                  "h4": "h4",
                  "h5": "h5",
                  "h6": "h6",
                  "headline": "h1",
                  "subheading": "h3",
                  "subtitle1": "h6",
                  "subtitle2": "h6",
                  "title": "h2",
                }
              }
              noWrap={false}
              paragraph={false}
              theme={
                Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "hover": "rgba(0, 0, 0, 0.08)",
                      "hoverOpacity": 0.08,
                      "selected": "rgba(0, 0, 0, 0.14)",
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": Object {
                    "unit": 8,
                  },
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "lineHeight": "1.46429em",
                    },
                    "body1Next": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "lineHeight": "1.71429em",
                    },
                    "body2Next": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.5,
                    },
                    "button": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "textTransform": "uppercase",
                    },
                    "buttonNext": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.3125,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "lineHeight": "1.375em",
                    },
                    "captionNext": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "display1": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "lineHeight": "1.20588em",
                    },
                    "display2": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.8125rem",
                      "fontWeight": 400,
                      "lineHeight": "1.13333em",
                      "marginLeft": "-.02em",
                    },
                    "display3": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "-.02em",
                      "lineHeight": "1.30357em",
                      "marginLeft": "-.02em",
                    },
                    "display4": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "7rem",
                      "fontWeight": 300,
                      "letterSpacing": "-.04em",
                      "lineHeight": "1.14286em",
                      "marginLeft": "-.04em",
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1,
                    },
                    "h2": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1,
                    },
                    "h3": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.04,
                    },
                    "h4": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.17,
                    },
                    "h5": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.33,
                    },
                    "h6": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "headline": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "lineHeight": "1.35417em",
                    },
                    "overline": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subheading": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "lineHeight": "1.5em",
                    },
                    "subtitle1": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                    "title": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.3125rem",
                      "fontWeight": 500,
                      "lineHeight": "1.16667em",
                    },
                    "useNextVariants": false,
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "tooltip": 1500,
                  },
                }
              }
              variant="h5"
            >
              <h1
                className="MuiTypography-root-45 MuiTypography-h5-61"
              >
                Create user
              </h1>
            </Typography>
          </WithStyles(Typography)>
          <form
            className="LoginPage-form-4"
            onSubmit={[Function]}
          >
            <WithStyles(FormControl)
              fullWidth={true}
              margin="normal"
              required={true}
            >
              <FormControl
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth-83",
                    "marginDense": "MuiFormControl-marginDense-82",
                    "marginNormal": "MuiFormControl-marginNormal-81",
                    "root": "MuiFormControl-root-80",
                  }
                }
                component="div"
                disabled={false}
                error={false}
                fullWidth={true}
                margin="normal"
                required={true}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root-80 MuiFormControl-marginNormal-81 MuiFormControl-fullWidth-83"
                >
                  <WithStyles(WithFormControlContext(InputLabel))
                    htmlFor="nickname"
                  >
                    <WithFormControlContext(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated-92",
                          "disabled": "MuiInputLabel-disabled-86",
                          "error": "MuiInputLabel-error-87",
                          "filled": "MuiInputLabel-filled-93",
                          "focused": "MuiInputLabel-focused-85",
                          "formControl": "MuiInputLabel-formControl-89",
                          "marginDense": "MuiInputLabel-marginDense-90",
                          "outlined": "MuiInputLabel-outlined-94",
                          "required": "MuiInputLabel-required-88",
                          "root": "MuiInputLabel-root-84",
                          "shrink": "MuiInputLabel-shrink-91",
                        }
                      }
                      htmlFor="nickname"
                    >
                      <InputLabel
                        classes={
                          Object {
                            "animated": "MuiInputLabel-animated-92",
                            "disabled": "MuiInputLabel-disabled-86",
                            "error": "MuiInputLabel-error-87",
                            "filled": "MuiInputLabel-filled-93",
                            "focused": "MuiInputLabel-focused-85",
                            "formControl": "MuiInputLabel-formControl-89",
                            "marginDense": "MuiInputLabel-marginDense-90",
                            "outlined": "MuiInputLabel-outlined-94",
                            "required": "MuiInputLabel-required-88",
                            "root": "MuiInputLabel-root-84",
                            "shrink": "MuiInputLabel-shrink-91",
                          }
                        }
                        disableAnimation={false}
                        htmlFor="nickname"
                        muiFormControl={
                          Object {
                            "adornedStart": false,
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "margin": "normal",
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "required": true,
                            "variant": "standard",
                          }
                        }
                      >
                        <WithStyles(WithFormControlContext(FormLabel))
                          className="MuiInputLabel-root-84 MuiInputLabel-formControl-89 MuiInputLabel-animated-92"
                          classes={
                            Object {
                              "disabled": "MuiInputLabel-disabled-86",
                              "error": "MuiInputLabel-error-87",
                              "focused": "MuiInputLabel-focused-85",
                              "required": "MuiInputLabel-required-88",
                            }
                          }
                          data-shrink={false}
                          htmlFor="nickname"
                        >
                          <WithFormControlContext(FormLabel)
                            className="MuiInputLabel-root-84 MuiInputLabel-formControl-89 MuiInputLabel-animated-92"
                            classes={
                              Object {
                                "asterisk": "MuiFormLabel-asterisk-101",
                                "disabled": "MuiFormLabel-disabled-97 MuiInputLabel-disabled-86",
                                "error": "MuiFormLabel-error-98 MuiInputLabel-error-87",
                                "filled": "MuiFormLabel-filled-99",
                                "focused": "MuiFormLabel-focused-96 MuiInputLabel-focused-85",
                                "required": "MuiFormLabel-required-100 MuiInputLabel-required-88",
                                "root": "MuiFormLabel-root-95",
                              }
                            }
                            data-shrink={false}
                            htmlFor="nickname"
                          >
                            <FormLabel
                              className="MuiInputLabel-root-84 MuiInputLabel-formControl-89 MuiInputLabel-animated-92"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk-101",
                                  "disabled": "MuiFormLabel-disabled-97 MuiInputLabel-disabled-86",
                                  "error": "MuiFormLabel-error-98 MuiInputLabel-error-87",
                                  "filled": "MuiFormLabel-filled-99",
                                  "focused": "MuiFormLabel-focused-96 MuiInputLabel-focused-85",
                                  "required": "MuiFormLabel-required-100 MuiInputLabel-required-88",
                                  "root": "MuiFormLabel-root-95",
                                }
                              }
                              component="label"
                              data-shrink={false}
                              htmlFor="nickname"
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": true,
                                  "variant": "standard",
                                }
                              }
                            >
                              <label
                                className="MuiFormLabel-root-95 MuiFormLabel-required-100 MuiInputLabel-required-88 MuiInputLabel-root-84 MuiInputLabel-formControl-89 MuiInputLabel-animated-92"
                                data-shrink={false}
                                htmlFor="nickname"
                              >
                                Nickname
                                <span
                                  className="MuiFormLabel-asterisk-101"
                                >
                                   *
                                </span>
                              </label>
                            </FormLabel>
                          </WithFormControlContext(FormLabel)>
                        </WithStyles(WithFormControlContext(FormLabel))>
                      </InputLabel>
                    </WithFormControlContext(InputLabel)>
                  </WithStyles(WithFormControlContext(InputLabel))>
                  <WithStyles(Input)
                    autoComplete="nickname"
                    autoFocus={true}
                    id="nickname"
                    name="nickname"
                    onChange={[Function]}
                    value=""
                  >
                    <Input
                      autoComplete="nickname"
                      autoFocus={true}
                      classes={
                        Object {
                          "disabled": "MuiInput-disabled-105",
                          "error": "MuiInput-error-107",
                          "focused": "MuiInput-focused-104",
                          "formControl": "MuiInput-formControl-103",
                          "fullWidth": "MuiInput-fullWidth-109",
                          "input": "MuiInput-input-110",
                          "inputMarginDense": "MuiInput-inputMarginDense-111",
                          "inputMultiline": "MuiInput-inputMultiline-112",
                          "inputType": "MuiInput-inputType-113",
                          "inputTypeSearch": "MuiInput-inputTypeSearch-114",
                          "multiline": "MuiInput-multiline-108",
                          "root": "MuiInput-root-102",
                          "underline": "MuiInput-underline-106",
                        }
                      }
                      id="nickname"
                      name="nickname"
                      onChange={[Function]}
                      value=""
                    >
                      <WithStyles(WithFormControlContext(InputBase))
                        autoComplete="nickname"
                        autoFocus={true}
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-105",
                            "error": "MuiInput-error-107",
                            "focused": "MuiInput-focused-104",
                            "formControl": "MuiInput-formControl-103",
                            "fullWidth": "MuiInput-fullWidth-109",
                            "input": "MuiInput-input-110",
                            "inputMarginDense": "MuiInput-inputMarginDense-111",
                            "inputMultiline": "MuiInput-inputMultiline-112",
                            "inputType": "MuiInput-inputType-113",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-114",
                            "multiline": "MuiInput-multiline-108",
                            "root": "MuiInput-root-102 MuiInput-underline-106",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        id="nickname"
                        inputComponent="input"
                        multiline={false}
                        name="nickname"
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <WithFormControlContext(InputBase)
                          autoComplete="nickname"
                          autoFocus={true}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd-120",
                              "adornedStart": "MuiInputBase-adornedStart-119",
                              "disabled": "MuiInputBase-disabled-118 MuiInput-disabled-105",
                              "error": "MuiInputBase-error-121 MuiInput-error-107",
                              "focused": "MuiInputBase-focused-117 MuiInput-focused-104",
                              "formControl": "MuiInputBase-formControl-116 MuiInput-formControl-103",
                              "fullWidth": "MuiInputBase-fullWidth-124 MuiInput-fullWidth-109",
                              "input": "MuiInputBase-input-125 MuiInput-input-110",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-131",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart-130",
                              "inputMarginDense": "MuiInputBase-inputMarginDense-126 MuiInput-inputMarginDense-111",
                              "inputMultiline": "MuiInputBase-inputMultiline-127 MuiInput-inputMultiline-112",
                              "inputType": "MuiInputBase-inputType-128 MuiInput-inputType-113",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch-129 MuiInput-inputTypeSearch-114",
                              "marginDense": "MuiInputBase-marginDense-122",
                              "multiline": "MuiInputBase-multiline-123 MuiInput-multiline-108",
                              "root": "MuiInputBase-root-115 MuiInput-root-102 MuiInput-underline-106",
                            }
                          }
                          fullWidth={false}
                          id="nickname"
                          inputComponent="input"
                          multiline={false}
                          name="nickname"
                          onChange={[Function]}
                          type="text"
                          value=""
                        >
                          <InputBase
                            autoComplete="nickname"
                            autoFocus={true}
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-120",
                                "adornedStart": "MuiInputBase-adornedStart-119",
                                "disabled": "MuiInputBase-disabled-118 MuiInput-disabled-105",
                                "error": "MuiInputBase-error-121 MuiInput-error-107",
                                "focused": "MuiInputBase-focused-117 MuiInput-focused-104",
                                "formControl": "MuiInputBase-formControl-116 MuiInput-formControl-103",
                                "fullWidth": "MuiInputBase-fullWidth-124 MuiInput-fullWidth-109",
                                "input": "MuiInputBase-input-125 MuiInput-input-110",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-131",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-130",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-126 MuiInput-inputMarginDense-111",
                                "inputMultiline": "MuiInputBase-inputMultiline-127 MuiInput-inputMultiline-112",
                                "inputType": "MuiInputBase-inputType-128 MuiInput-inputType-113",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-129 MuiInput-inputTypeSearch-114",
                                "marginDense": "MuiInputBase-marginDense-122",
                                "multiline": "MuiInputBase-multiline-123 MuiInput-multiline-108",
                                "root": "MuiInputBase-root-115 MuiInput-root-102 MuiInput-underline-106",
                              }
                            }
                            fullWidth={false}
                            id="nickname"
                            inputComponent="input"
                            muiFormControl={
                              Object {
                                "adornedStart": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "margin": "normal",
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "required": true,
                                "variant": "standard",
                              }
                            }
                            multiline={false}
                            name="nickname"
                            onChange={[Function]}
                            type="text"
                            value=""
                          >
                            <div
                              className="MuiInputBase-root-115 MuiInput-root-102 MuiInput-underline-106 MuiInputBase-formControl-116 MuiInput-formControl-103"
                              onClick={[Function]}
                            >
                              <input
                                aria-invalid={false}
                                autoComplete="nickname"
                                autoFocus={true}
                                className="MuiInputBase-input-125 MuiInput-input-110"
                                disabled={false}
                                id="nickname"
                                name="nickname"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={true}
                                type="text"
                                value=""
                              />
                            </div>
                          </InputBase>
                        </WithFormControlContext(InputBase)>
                      </WithStyles(WithFormControlContext(InputBase))>
                    </Input>
                  </WithStyles(Input)>
                </div>
              </FormControl>
            </WithStyles(FormControl)>
            <WithStyles(Button)
              className="LoginPage-submit-5"
              color="primary"
              fullWidth={true}
              type="submit"
              variant="contained"
            >
              <Button
                className="LoginPage-submit-5"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit-153",
                    "contained": "MuiButton-contained-143",
                    "containedPrimary": "MuiButton-containedPrimary-144",
                    "containedSecondary": "MuiButton-containedSecondary-145",
                    "disabled": "MuiButton-disabled-152",
                    "extendedFab": "MuiButton-extendedFab-150",
                    "fab": "MuiButton-fab-149",
                    "flat": "MuiButton-flat-137",
                    "flatPrimary": "MuiButton-flatPrimary-138",
                    "flatSecondary": "MuiButton-flatSecondary-139",
                    "focusVisible": "MuiButton-focusVisible-151",
                    "fullWidth": "MuiButton-fullWidth-157",
                    "label": "MuiButton-label-133",
                    "mini": "MuiButton-mini-154",
                    "outlined": "MuiButton-outlined-140",
                    "outlinedPrimary": "MuiButton-outlinedPrimary-141",
                    "outlinedSecondary": "MuiButton-outlinedSecondary-142",
                    "raised": "MuiButton-raised-146",
                    "raisedPrimary": "MuiButton-raisedPrimary-147",
                    "raisedSecondary": "MuiButton-raisedSecondary-148",
                    "root": "MuiButton-root-132",
                    "sizeLarge": "MuiButton-sizeLarge-156",
                    "sizeSmall": "MuiButton-sizeSmall-155",
                    "text": "MuiButton-text-134",
                    "textPrimary": "MuiButton-textPrimary-135",
                    "textSecondary": "MuiButton-textSecondary-136",
                  }
                }
                color="primary"
                component="button"
                disableFocusRipple={false}
                disabled={false}
                fullWidth={true}
                mini={false}
                size="medium"
                type="submit"
                variant="contained"
              >
                <WithStyles(ButtonBase)
                  className="MuiButton-root-132 MuiButton-contained-143 MuiButton-containedPrimary-144 MuiButton-raised-146 MuiButton-raisedPrimary-147 MuiButton-fullWidth-157 LoginPage-submit-5"
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-151"
                  type="submit"
                >
                  <ButtonBase
                    centerRipple={false}
                    className="MuiButton-root-132 MuiButton-contained-143 MuiButton-containedPrimary-144 MuiButton-raised-146 MuiButton-raisedPrimary-147 MuiButton-fullWidth-157 LoginPage-submit-5"
                    classes={
                      Object {
                        "disabled": "MuiButtonBase-disabled-159",
                        "focusVisible": "MuiButtonBase-focusVisible-160",
                        "root": "MuiButtonBase-root-158",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disableTouchRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="MuiButton-focusVisible-151"
                    tabIndex="0"
                    type="submit"
                  >
                    <button
                      className="MuiButtonBase-root-158 MuiButton-root-132 MuiButton-contained-143 MuiButton-containedPrimary-144 MuiButton-raised-146 MuiButton-raisedPrimary-147 MuiButton-fullWidth-157 LoginPage-submit-5"
                      disabled={false}
                      onBlur={[Function]}
                      onContextMenu={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex="0"
                      type="submit"
                    >
                      <span
                        className="MuiButton-label-133"
                      >
                        Log in
                      </span>
                      <NoSsr
                        defer={false}
                        fallback={null}
                      >
                        <WithStyles(TouchRipple)
                          center={false}
                          innerRef={[Function]}
                        >
                          <TouchRipple
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child-165",
                                "childLeaving": "MuiTouchRipple-childLeaving-166",
                                "childPulsate": "MuiTouchRipple-childPulsate-167",
                                "ripple": "MuiTouchRipple-ripple-162",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-164",
                                "rippleVisible": "MuiTouchRipple-rippleVisible-163",
                                "root": "MuiTouchRipple-root-161",
                              }
                            }
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              className="MuiTouchRipple-root-161"
                              component="span"
                              enter={true}
                              exit={true}
                            >
                              <span
                                className="MuiTouchRipple-root-161"
                              />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </NoSsr>
                    </button>
                  </ButtonBase>
                </WithStyles(ButtonBase)>
              </Button>
            </WithStyles(Button)>
          </form>
        </div>
      </Paper>
    </WithStyles(Paper)>
  </main>
</LoginPage>
`;
